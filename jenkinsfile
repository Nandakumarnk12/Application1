pipeline {
    agent any
    tools {
    maven 'maven3'
  }
     environment {
        SCANNER_HOME = tool 'sonar-server'
    }
    stages {
        stage('git checkout') {
            steps {
            git 'https://github.com/Nandakumarnk12/Application1.git'
            }
        }
        stage('compile') {
            steps {
              sh 'mvn clean compile'
            }
        }
        stage('code analysis') {
            steps {
              withSonarQubeEnv('sonar-server') {
               sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Application1 \
               -Dsonar.java.binaries=. \
               -Dsonar.projectKey=Application1'''
              }
            }
        }
       
        stage('docker-image') {
          steps {
            sh 'docker build -t java .'
          }
        }
        stage('docker-container') {
          steps {
            sh 'docker run -itd -p 8081:8080 java' 
          }
        }
    }
    post {
        always {
            echo 'slack Notification.'
            slackSend channel: '#java-ci-cd-pipeline', message: 'Build success'
        }
    }
}

